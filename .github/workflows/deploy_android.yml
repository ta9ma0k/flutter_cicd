name: "[ANDROID] build & deploy stg app"
on:
  push:
    branches: 

jobs:
  analyze_and_test:
    name: Test and Analyze
    uses: ./.github/workflows/ci.yml

  build:
    name: Build Android
    needs: [analyze_and_test]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version-file: pubspec.yaml
          cache: true
      - name: Cache Flutter build
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            build/
          key: ${{ runner.os }}-flutter-${{ hashFiles('pubspec.yaml') }}
      - name: Setup packages
        run: |
          flutter pub get
      - name: Create key.properties
        run: |
          echo ${{ secrets.ANDROID_KEY_JKS }} | base64 -d > android/app/release.jks
          echo 'storeFile=release.jks' > android/key.properties
          echo 'storePassword=${{ secrets.ANDROID_STORE_PASSWORD }}' >> android/key.properties
          echo 'keyPassword=${{ secrets.ANDROID_ALIAS_PASSWORD }}' >> android/key.properties
          echo 'keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}' >> android/key.properties
      - name: build
        run: flutter build apk --build-number=$GITHUB_RUN_NUMBER
      - name: collect apk artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-release.apk 

  release:
    name: Release apk to Firebase
    uses: ./.github/workflows/deploy_app_distribution.yml
    needs: [build]
    permissions:
      contents: read
      id-token: write
    with:
      artifact: release-apk
      filename: app-release.apk 
    secrets:
      app_id: ${{ secrets.ANDROID_APP_ID }}
